const fs=require("fs"),path=require("path"),MAIN_CONFIG_FILE="../../Config/project_config.json",{workerData:workerData,parentPort:parentPort,threadId:threadId}=require("worker_threads"),logger=require("ksl-log-helper").logger,logLevel=workerData.logLevel;logger.setLevel(logLevel),logger.info("Parse Alarm Data Worker ID:"+threadId);class KSLParseAlarmData{constructor(){let e=JSON.parse(fs.readFileSync(path.join(__dirname,MAIN_CONFIG_FILE),"utf-8"));this.clientName=e.ClientName}analysisAlarmData(e){let t=e.unhandledDataObj,r=(e.topic,e.subscribeTopicObj),a=new Map;for(let e=0;e<t.length;++e)a.set(t[e].N,t[e]);let s={};try{for(let[e,t]of r)if(e.includes("discrete")){let r={},l=e,o=t.DiscreteVars,n=Object.keys(o);for(let e=0;e<n.length;++e)a.has(n[e])&&(r[n[e]]=a.get(n[e]).V);if(0!==Object.keys(r).length){let e={};e.From=this.clientName,e.RequestId=t.RequestId,e.DiscreteVars=r,s[l]={topic:l,msg:e}}}else{let r=e,l={},o=[];for(let e=0;e<t.Conditions.length;++e){let r=[];for(let s=0;s<t[t.Conditions[e]].length;++s)a.has(t[t.Conditions[e]][s])&&r.push(a.get(t[t.Conditions[e]][s]));0!==r.length&&(o.push(t.Conditions[e]),l[t.Conditions[e]]=r)}if(0!==o.length){let e={};e.From=this.clientName,e.RequestId=t.RequestId,e.Conditions=o,e.TagValues=l,s[r]={topic:r,msg:e}}}}catch(e){logger.error("Parse Alarm Data Error->"+e.message)}return s}}const KSLParseAlarmDataObj=new KSLParseAlarmData;parentPort.on("message",e=>{let t=KSLParseAlarmDataObj.analysisAlarmData(e);if(0===Object.keys(t).length)return;let r={};r.msg=t,parentPort.postMessage(r)});