"use-struct";const fs=require("fs"),path=require("path"),MAIN_CONFIG_FILE="../../Config/project_config.json",{workerData:workerData,parentPort:parentPort,threadId:threadId}=require("worker_threads"),logger=require("ksl-log-helper").logger,logLevel=workerData.logLevel;logger.setLevel(logLevel),logger.info("Parse Script Data Worker ID:"+threadId);class KSLParseScriptData{constructor(){let e=JSON.parse(fs.readFileSync(path.join(__dirname,MAIN_CONFIG_FILE),"utf-8"));this.clientName=e.ClientName}analysisRealData(e){let t=e.unhandledDataObj,r=e.topic,a=e.subscribeTopicObj,s=new Map;for(let e=0;e<t.length;++e)s.set(t[e].N,t[e]);let l={},o=[],g={};try{for(let[e,i]of a){if(0===i.Tags.length){for(let e=0;e<t.length;++e)o.push(t[e]);l=o;let a={};a.From=this.clientName,a.TagValues=l,g[r]={topic:e,msg:a}}else{for(let e=0;e<i.Tags.length;++e){let t=s.get(i.Tags[e]);void 0!==t&&o.push(t)}if(0!==o.length){l=o;let t={};t.From=this.clientName,t.TagValues=l,g[r]={topic:e,msg:t}}}}}catch(e){logger.error("Parse RunBG Data Error->"+e.message)}return g}}const KSLParseScriptObj=new KSLParseScriptData;parentPort.on("message",e=>{let t=KSLParseScriptObj.analysisRealData(e),r={};r.msg=t,parentPort.postMessage(r)});