"use-struct";const _=require("lodash"),fs=require("fs"),path=require("path"),moment=require("moment"),regeneratorRuntime=require("ksl-regenerator-runtime"),RedisClusterOp=require("ksl-redis"),logger=require("ksl-log-helper").logger;logger.setLevel("info");const{threadId:threadId}=require("worker_threads");let heartStatus=0;const WRITE_REDIS_INTERVAL=5e3,WRITE_REDIS_LIMIT=1e3;process.env.servername="collectioserver",global.realtagForRedualMap=new Map;let redisObj=void 0,logLevel="info",lastTime=0,unHandledRedisData={},tagObj=void 0,nameIdMap=new Map,redisDataArr=[];async function onTimer(){if(unHandledRedisData={},0!=redisDataArr.length)try{let e=redisDataArr.length,t=1==e?1:e-1,r=redisDataArr.splice(0,t);logger.info("Redis redisData length::: "+r.length);for(let e=0;e<r.length;e++){let t=r[e];for(let e=0;e<t.length;e++){let r=t[e],s=_.get(r,"N"),a=_.get(r,"V");if(unHandledRedisData["real_"+s]=JSON.stringify(r),!nameIdMap.has(s))continue;let o=nameIdMap.get(s),n=tagObj[o];if(!n)continue;let i=_.get(n,"BitTags",[]);for(let e=0;e<i.length;e++){let t=tagObj[i[e]],r=t.TagBit,s=`real_${t.Name}`,o=kssGetTagBitVal(a,r,32),n={};n.N=t.Name,n.Q=192,n.T=moment().format("YYYY-MM-DD HH:mm:ss.SSS"),n.V=o,unHandledRedisData[s]=JSON.stringify(n)}}}let s=Object.keys(unHandledRedisData);for(let e=0;e<s.length;e++){let t=s[e];redisObj.redisSetMulti(t,unHandledRedisData[t])}logger.info("+++++++++++++++++++++++++setinterval->"+s.length),await redisObj.redisMultiExec()}catch(e){logger.error("Redis Error "+e.message)}}function readRealDBCfg(e){let t=!0;try{let r=e.mode,s={},a=[];if(0===r)s={host:e.singleRedis.connInfo.ip,port:e.singleRedis.connInfo.port,password:e.singleRedis.connInfo.password};else if(1===r){let t=e.multiRedis;for(const e of t){let t={host:e.connInfo.ip,port:e.connInfo.port,password:e.connInfo.password};a.push(t)}}else logger.warn("redis mode error");redisObj=new RedisClusterOp(r,s,a).getClient()}catch(e){logger.error("Write Redis Process Error!->"+e.message),t=!1}return t}function kssGetTagBitVal(e,t,r){let s=null;if(r>t){let a=null,o=null;s="1"===(o=(a=(a=(a=(a=e).toString(2)).length>r?a:a.padStart(r,"0")).split("").reverse().join("")).charAt(t))}else console.log("tagName: ",tagName,"figures: ",t,"coverage: ",r,"[kssGetTagBitVal] 输入的位数需小于补位数！");return s}setInterval(onTimer,5e3),async function(){let e=path.join(__dirname,"../../../../My Projects/main_config_project/tag_group/tag.json");async function t(){tagObj=JSON.parse(fs.readFileSync(e));for(let e in tagObj){let t=tagObj[e].Name;""===t||t.startsWith("$")||!tagObj[e].hasOwnProperty("TagBit")&&!0!==tagObj[e].IsBitGettedTag||nameIdMap.set(t,e)}}await t(),function(e,t){try{logger.info("【子进程】bittagprocess file change watch - %s",e);let r=path.basename(e);fs.watchFile(e,(e,s)=>{e.mtime!=s.mtime?(logger.info("【子进程】bittagprocess %s is change. system reload it",r),t()):logger.info("【子进程】bittagprocess %s is not change",r)})}catch(e){logger.error("【子进程】bittagprocess "+e.message)}}(e,()=>{setTimeout(()=>{t()},200)})}(),process.on("SIGTERM",e=>{logger.warn(`Redis process recv signal:${e}`),process.exit()}),process.on("message",async e=>{try{if("object"!=typeof e)return;if(e.hasOwnProperty("cfg"))readRealDBCfg(e.cfg),logLevel=e.logLevel,logger.setLevel(logLevel);else if(e.hasOwnProperty("heartbeat"))"pong"===e.heartbeat&&(heartStatus=0,logger.debug("alarm process rec pong"));else{if(0===e.length)return void logger.error("The redis msg is Empty");redisDataArr.push(e)}}catch(e){logger.error("Redis Error "+e.message)}}),setInterval(()=>{!1===(heartStatus+=1)&&process.exit(),process.send({heartbeat:"ping"})},1e4);